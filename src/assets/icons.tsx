interface SVGIconProps {
    fill?: string;
    stroke?: string;
    className?: string;
};

const Suit = ({ fill, stroke, ...props }: SVGIconProps) => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M9.895 6.35716C10.066 6.25465 10.2707 6.22414 10.4641 6.27232C10.6576 6.3205 10.824 6.44343 10.927 6.61416L12 8.40616L13.074 6.61416C13.177 6.44343 13.3434 6.3205 13.5369 6.27232C13.7303 6.22414 13.935 6.25465 14.106 6.35716C14.1905 6.40777 14.2642 6.47454 14.3229 6.55365C14.3817 6.63276 14.4242 6.72266 14.4482 6.81821C14.4721 6.91377 14.477 7.01311 14.4626 7.11056C14.4481 7.20801 14.4146 7.30166 14.364 7.38616C14.048 7.91016 13.712 8.42716 13.418 8.96516C13.254 9.26316 13.25 9.28216 13.33 9.63416L15.196 17.7912C15.429 19.1012 14.884 20.1152 14.07 21.0882L13.064 22.2652C12.818 22.5002 12.472 22.7502 12 22.7502C11.528 22.7502 11.182 22.5002 10.936 22.2652L9.93 21.0882C9.116 20.1152 8.57 19.1012 8.804 17.7912L10.66 9.65016C10.747 9.26716 10.746 9.25816 10.546 8.92016L9.638 7.38616C9.5872 7.30162 9.55358 7.20789 9.53905 7.11033C9.52453 7.01278 9.52939 6.91332 9.55335 6.81764C9.57732 6.72197 9.61992 6.63196 9.67871 6.55277C9.73751 6.47359 9.81135 6.40677 9.896 6.35616" fill={fill} />
        <path d="M7.49999 7.909L5.79999 5.63C5.62999 5.403 5.54599 5.29 5.42399 5.237C5.30199 5.184 5.15899 5.2 4.87399 5.232C4.55899 5.268 4.18299 5.308 3.92999 5.324C2.86499 5.396 3.03699 5.628 3.21999 6.525L5.20399 16.274C5.43199 17.164 5.58299 17.744 5.75199 18.171C5.91999 18.594 6.15899 18.944 6.63299 19.008C6.76467 19.0236 6.89191 19.0653 7.00733 19.1306C7.12274 19.1959 7.22403 19.2835 7.30528 19.3882C7.38653 19.493 7.44614 19.6129 7.48062 19.741C7.5151 19.869 7.52378 20.0026 7.50614 20.134C7.4885 20.2655 7.4449 20.3921 7.37788 20.5065C7.31086 20.6209 7.22175 20.7208 7.11575 20.8005C7.00974 20.8801 6.88895 20.9379 6.76041 20.9704C6.63186 21.003 6.49813 21.0096 6.36699 20.99C5.17199 20.83 4.32699 20.003 3.89299 18.909C3.61299 18.204 3.39999 17.439 3.24899 16.697L1.26499 6.95L1.25699 6.919C1.15399 6.518 1.05199 6.119 1.01599 5.778C0.973993 5.386 0.998993 4.915 1.30199 4.472C1.98599 3.473 3.13599 3.375 3.79699 3.331C4.23599 3.301 4.86699 3.371 5.25699 3.119C5.56799 2.919 5.60699 2.661 5.71699 2.329C5.81199 2.043 5.99999 1.613 6.49399 1.321C6.91999 1.067 7.44399 1 7.99999 1C8.22416 1.00005 8.4418 1.07542 8.61799 1.214L10.773 2.907C11.075 3.144 11.387 3.376 11.667 3.639C11.837 3.799 11.921 3.878 12 3.878C12.079 3.878 12.164 3.798 12.333 3.639C12.613 3.375 12.927 3.143 13.227 2.907L15.382 1.214C15.5582 1.07542 15.7758 1.00005 16 1C16.556 1 17.079 1.067 17.506 1.32C18 1.612 18.188 2.042 18.283 2.329C18.393 2.66 18.432 2.918 18.743 3.119C19.133 3.369 19.764 3.3 20.203 3.329C20.863 3.374 22.013 3.472 22.698 4.471C23.001 4.914 23.026 5.385 22.984 5.777C22.948 6.117 22.846 6.517 22.744 6.917L22.735 6.949L20.751 16.699C20.6021 17.4533 20.3866 18.1928 20.107 18.909C19.673 20.004 18.827 20.831 17.633 20.991C17.5019 21.0106 17.3681 21.004 17.2396 20.9714C17.111 20.9389 16.9902 20.8811 16.8842 20.8015C16.7782 20.7218 16.6891 20.6219 16.6221 20.5075C16.5551 20.3931 16.5115 20.2665 16.4938 20.135C16.4762 20.0036 16.4849 19.87 16.5194 19.742C16.5539 19.6139 16.6135 19.494 16.6947 19.3892C16.776 19.2845 16.8772 19.1969 16.9927 19.1316C17.1081 19.0663 17.2353 19.0246 17.367 19.009C17.841 18.945 18.08 18.595 18.247 18.172C18.417 17.745 18.567 17.165 18.796 16.275L20.78 6.526C20.963 5.629 21.135 5.396 20.07 5.326C19.817 5.309 19.44 5.269 19.125 5.233C18.841 5.201 18.698 5.185 18.576 5.238C18.454 5.291 18.369 5.404 18.2 5.631L16.5 7.91C16.357 8.108 16.192 8.342 16.026 8.517C15.841 8.711 15.526 8.973 15.056 9.008C14.583 9.043 14.233 8.829 14.021 8.662C13.596 8.327 13.239 7.889 12.866 7.499C12.613 7.233 12.369 6.978 12.167 6.736C12.087 6.639 12.047 6.591 12 6.591C11.953 6.591 11.913 6.639 11.833 6.736C11.631 6.978 11.387 7.233 11.133 7.499C10.761 7.889 10.404 8.327 9.97899 8.662C9.76699 8.829 9.41699 9.043 8.94399 9.008C8.47399 8.973 8.15899 8.711 7.97399 8.517C7.80799 8.342 7.64299 8.108 7.50099 7.91" fill={fill} />
    </svg>
);

const Toga = ({ fill, ...props }: SVGIconProps) => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path d="M10.841 2.433C11.26 2.326 11.667 2.25 12 2.25C12.333 2.25 12.74 2.326 13.159 2.433C13.59 2.543 14.085 2.699 14.612 2.886C15.666 3.26 16.882 3.769 18.034 4.32C19.182 4.87 20.291 5.47 21.123 6.03C21.536 6.309 21.906 6.594 22.182 6.873C22.32 7.013 22.452 7.169 22.552 7.339C22.652 7.504 22.75 7.732 22.75 8C22.75 8.268 22.651 8.496 22.553 8.66C22.452 8.83 22.32 8.987 22.182 9.127C21.906 9.407 21.536 9.691 21.122 9.969C20.291 10.529 19.182 11.131 18.034 11.679C16.9181 12.2143 15.776 12.6932 14.612 13.114C14.085 13.301 13.59 13.457 13.159 13.567C12.74 13.674 12.333 13.75 12 13.75C11.667 13.75 11.26 13.674 10.841 13.567C10.41 13.457 9.915 13.301 9.388 13.114C8.22407 12.6935 7.08197 12.2149 5.966 11.68C4.818 11.13 3.709 10.53 2.877 9.97C2.464 9.691 2.094 9.406 1.818 9.127C1.67656 8.98695 1.55234 8.83051 1.448 8.661C1.32366 8.46253 1.25525 8.23415 1.25 8C1.25 7.732 1.349 7.504 1.447 7.34C1.548 7.17 1.68 7.013 1.818 6.873C2.094 6.593 2.464 6.309 2.878 6.031C3.709 5.471 4.818 4.869 5.966 4.321C7.08195 3.78573 8.22405 3.3068 9.388 2.886C9.86533 2.71338 10.3501 2.56223 10.841 2.433Z" fill={fill} />
        <path d="M15.114 14.529C14.56 14.725 14.019 14.896 13.53 15.021C13.08 15.136 12.526 15.251 12 15.251C11.476 15.251 10.922 15.136 10.472 15.021C9.982 14.896 9.442 14.725 8.887 14.528C8.015 14.219 7.047 13.825 6.094 13.394C6.01522 13.358 5.92853 13.3427 5.84218 13.3496C5.75582 13.3565 5.67267 13.3854 5.60062 13.4335C5.52857 13.4816 5.47002 13.5473 5.43053 13.6244C5.39104 13.7015 5.37192 13.7874 5.375 13.874L5.497 16.663C5.503 16.803 5.52 16.987 5.578 17.181C5.716 17.634 5.983 18.093 6.431 18.414C7.101 18.894 7.99 19.223 8.934 19.434C9.889 19.646 10.949 19.75 12.001 19.75C13.053 19.75 14.113 19.646 15.068 19.433C16.012 19.223 16.901 18.894 17.571 18.415C18.019 18.093 18.286 17.635 18.423 17.181C18.483 16.987 18.499 16.804 18.505 16.663L18.626 13.874C18.629 13.7876 18.6099 13.7018 18.5704 13.6248C18.531 13.5478 18.4725 13.4822 18.4006 13.4341C18.3287 13.386 18.2457 13.3571 18.1595 13.3501C18.0733 13.3431 17.9867 13.3582 17.908 13.394C16.955 13.824 15.988 14.219 15.114 14.528M20.5 8.75C20.6989 8.75 20.8897 8.82902 21.0303 8.96967C21.171 9.11032 21.25 9.30109 21.25 9.5V16.356C21.334 16.546 21.444 16.751 21.577 17.001C21.666 17.167 21.765 17.351 21.874 17.565C22.162 18.129 22.473 18.809 22.658 19.59C22.782 20.11 22.856 20.796 22.366 21.287C22.137 21.517 21.855 21.625 21.606 21.68C21.358 21.735 21.086 21.75 20.816 21.75H20.185C19.914 21.75 19.642 21.735 19.394 21.68C19.1079 21.6256 18.8438 21.489 18.634 21.287C18.144 20.797 18.218 20.109 18.342 19.59C18.527 18.81 18.838 18.129 19.126 17.565C19.236 17.352 19.334 17.167 19.423 17.001C19.556 16.751 19.666 16.546 19.75 16.356V9.5C19.75 9.30109 19.829 9.11032 19.9697 8.96967C20.1103 8.82902 20.3011 8.75 20.5 8.75Z" fill={fill} />
    </svg>
);

const Sun = ({ fill, className, ...props }: SVGIconProps) => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path fillRule="evenodd" clipRule="evenodd" d="M6.25 12C6.25 10.475 6.8558 9.01247 7.93414 7.93414C9.01247 6.8558 10.475 6.25 12 6.25C13.525 6.25 14.9875 6.8558 16.0659 7.93414C17.1442 9.01247 17.75 10.475 17.75 12C17.75 13.525 17.1442 14.9875 16.0659 16.0659C14.9875 17.1442 13.525 17.75 12 17.75C10.475 17.75 9.01247 17.1442 7.93414 16.0659C6.8558 14.9875 6.25 13.525 6.25 12ZM11.998 1C12.2632 1 12.5176 1.10536 12.7051 1.29289C12.8926 1.48043 12.998 1.73478 12.998 2V4C12.998 4.26522 12.8926 4.51957 12.7051 4.70711C12.5176 4.89464 12.2632 5 11.998 5C11.7328 5 11.4784 4.89464 11.2909 4.70711C11.1034 4.51957 10.998 4.26522 10.998 4V2C10.998 1.73478 11.1034 1.48043 11.2909 1.29289C11.4784 1.10536 11.7328 1 11.998 1ZM4.293 4.294C4.48053 4.10653 4.73484 4.00121 5 4.00121C5.26516 4.00121 5.51947 4.10653 5.707 4.294L7.207 5.793C7.39451 5.98064 7.4998 6.23508 7.4997 6.50035C7.49961 6.76562 7.39414 7.01999 7.2065 7.2075C7.01886 7.39501 6.76442 7.5003 6.49915 7.5002C6.23388 7.50011 5.97951 7.39464 5.792 7.207L4.292 5.708C4.10453 5.52047 3.99921 5.26616 3.99921 5.001C3.99921 4.73584 4.10453 4.48153 4.292 4.294M19.704 4.294C19.8915 4.48153 19.9968 4.73584 19.9968 5.001C19.9968 5.26616 19.8915 5.52047 19.704 5.708L18.205 7.208C18.1121 7.30084 18.0018 7.37448 17.8804 7.4247C17.7591 7.47492 17.629 7.50075 17.4976 7.5007C17.3663 7.50066 17.2362 7.47474 17.1149 7.42443C16.9936 7.37412 16.8833 7.30041 16.7905 7.2075C16.6977 7.11459 16.624 7.0043 16.5738 6.88293C16.5236 6.76157 16.4978 6.63149 16.4978 6.50015C16.4978 6.3688 16.5238 6.23874 16.5741 6.11741C16.6244 5.99608 16.6981 5.88584 16.791 5.793L18.29 4.293C18.4775 4.10553 18.7318 4.00021 18.997 4.00021C19.2622 4.00021 19.5165 4.10653 19.704 4.294ZM1 12C1 11.7348 1.10536 11.4804 1.29289 11.2929C1.48043 11.1054 1.73478 11 2 11H4C4.26522 11 4.51957 11.1054 4.70711 11.2929C4.89464 11.4804 5 11.7348 5 12C5 12.2652 4.89464 12.5196 4.70711 12.7071C4.51957 12.8946 4.26522 13 4 13H2C1.73478 13 1.48043 12.8946 1.29289 12.7071C1.10536 12.5196 1 12.2652 1 12ZM19 12C19 11.7348 19.1054 11.4804 19.2929 11.2929C19.4804 11.1054 19.7348 11 20 11H22C22.2652 11 22.5196 11.1054 22.7071 11.2929C22.8946 11.4804 23 11.7348 23 12C23 12.2652 22.8946 12.5196 22.7071 12.7071C22.5196 12.8946 22.2652 13 22 13H20C19.7348 13 19.4804 12.8946 19.2929 12.7071C19.1054 12.5196 19 12.2652 19 12ZM7.207 16.793C7.39447 16.9805 7.49979 17.2348 7.49979 17.5C7.49979 17.7652 7.39447 18.0195 7.207 18.207L5.707 19.707C5.5184 19.8892 5.2658 19.99 5.0036 19.9877C4.7414 19.9854 4.49059 19.8802 4.30518 19.6948C4.11977 19.5094 4.0146 19.2586 4.01233 18.9964C4.01005 18.7342 4.11084 18.4816 4.293 18.293L5.793 16.793C5.98053 16.6055 6.23484 16.5002 6.5 16.5002C6.76516 16.5002 7.01947 16.6055 7.207 16.793ZM16.793 16.793C16.9805 16.6055 17.2348 16.5002 17.5 16.5002C17.7652 16.5002 18.0195 16.6055 18.207 16.793L19.707 18.293C19.8946 18.4805 20.0001 18.7349 20.0002 19.0001C20.0003 19.2654 19.895 19.5199 19.7075 19.7075C19.52 19.8951 19.2656 20.0006 19.0004 20.0007C18.7351 20.0008 18.4806 19.8955 18.293 19.708L16.793 18.208C16.6055 18.0205 16.5002 17.7662 16.5002 17.501C16.5002 17.2358 16.6055 16.9815 16.793 16.794M11.998 19C12.2632 19 12.5176 19.1054 12.7051 19.2929C12.8926 19.4804 12.998 19.7348 12.998 20V22C12.998 22.2652 12.8926 22.5196 12.7051 22.7071C12.5176 22.8946 12.2632 23 11.998 23C11.7328 23 11.4784 22.8946 11.2909 22.7071C11.1034 22.5196 10.998 22.2652 10.998 22V20C10.998 19.7348 11.1034 19.4804 11.2909 19.2929C11.4784 19.1054 11.7328 19 11.998 19Z" fill={fill} />
    </svg>
);

const Moon = ({ fill, className, ...props }: SVGIconProps) => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path fillRule="evenodd" clipRule="evenodd" d="M12 22.75C17.937 22.75 22.75 17.937 22.75 12C22.75 6.063 17.937 1.25 12 1.25C6.063 1.25 1.25 6.063 1.25 12C1.25 17.937 6.063 22.75 12 22.75ZM3.205 12C3.205 10.8449 3.43252 9.70119 3.87458 8.63407C4.31663 7.56694 4.96455 6.59735 5.78135 5.78064C6.59815 4.96394 7.56782 4.31612 8.63499 3.87419C9.70217 3.43226 10.8459 3.20487 12.001 3.205C13.141 3.205 14.341 3.981 15.309 5.592C16.264 7.185 16.887 9.448 16.887 12C16.887 14.552 16.264 16.815 15.309 18.408C14.342 20.019 13.142 20.795 12.001 20.795C10.8459 20.7951 9.70217 20.5677 8.63499 20.1258C7.56782 19.6839 6.59815 19.0361 5.78135 18.2194C4.96455 17.4027 4.31663 16.4331 3.87458 15.3659C3.43252 14.2988 3.205 13.1551 3.205 12Z" fill={fill} />
        <path fillRule="evenodd" clipRule="evenodd" d="M9.99999 7C9.99999 6.73478 10.1054 6.48043 10.2929 6.29289C10.4804 6.10536 10.7348 6 11 6H11.009C11.2742 6 11.5286 6.10536 11.7161 6.29289C11.9036 6.48043 12.009 6.73478 12.009 7C12.009 7.26522 11.9036 7.51957 11.7161 7.70711C11.5286 7.89464 11.2742 8 11.009 8H10.999C10.7338 8 10.4794 7.89464 10.2919 7.70711C10.1043 7.51957 9.99899 7.26522 9.99899 7" fill={fill} />
        <path d="M6.25 14.5C6.25 13.9033 6.48705 13.331 6.90901 12.909C7.33097 12.4871 7.90326 12.25 8.5 12.25C9.09674 12.25 9.66903 12.4871 10.091 12.909C10.5129 13.331 10.75 13.9033 10.75 14.5C10.75 15.0967 10.5129 15.669 10.091 16.091C9.66903 16.5129 9.09674 16.75 8.5 16.75C7.90326 16.75 7.33097 16.5129 6.90901 16.091C6.48705 15.669 6.25 15.0967 6.25 14.5Z" fill={fill} />
    </svg>
);

const Search = ({ fill, ...props }: SVGIconProps) => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path fillRule="evenodd" clipRule="evenodd" d="M16.293 17.707L14.293 15.707L15.707 14.293L17.707 16.293L16.293 17.707Z" fill={fill} />
        <path fillRule="evenodd" clipRule="evenodd" d="M1 9.5C1 7.24566 1.89553 5.08365 3.48959 3.48959C5.08365 1.89553 7.24566 1 9.5 1C11.7543 1 13.9163 1.89553 15.5104 3.48959C17.1045 5.08365 18 7.24566 18 9.5C18 11.7543 17.1045 13.9163 15.5104 15.5104C13.9163 17.1045 11.7543 18 9.5 18C7.24566 18 5.08365 17.1045 3.48959 15.5104C1.89553 13.9163 1 11.7543 1 9.5ZM9.5 3C7.77609 3 6.12279 3.68482 4.90381 4.90381C3.68482 6.12279 3 7.77609 3 9.5C3 11.2239 3.68482 12.8772 4.90381 14.0962C6.12279 15.3152 7.77609 16 9.5 16C11.2239 16 12.8772 15.3152 14.0962 14.0962C15.3152 12.8772 16 11.2239 16 9.5C16 7.77609 15.3152 6.12279 14.0962 4.90381C12.8772 3.68482 11.2239 3 9.5 3ZM16.83 16.83C17.0141 16.6458 17.2328 16.4996 17.4734 16.3999C17.7141 16.3002 17.972 16.2489 18.2325 16.2489C18.493 16.2489 18.7509 16.3002 18.9916 16.3999C19.2322 16.4996 19.4509 16.6458 19.635 16.83L22.169 19.365C22.3582 19.548 22.509 19.7668 22.6127 20.0087C22.7165 20.2505 22.771 20.5106 22.7732 20.7738C22.7754 21.037 22.7251 21.2979 22.6254 21.5415C22.5257 21.7851 22.3785 22.0063 22.1924 22.1924C22.0063 22.3785 21.7851 22.5257 21.5415 22.6254C21.2979 22.7251 21.037 22.7754 20.7738 22.7732C20.5106 22.771 20.2505 22.7165 20.0087 22.6127C19.7668 22.509 19.548 22.3582 19.365 22.169L16.831 19.635C16.4592 19.2631 16.2504 18.7588 16.2504 18.233C16.2504 17.7072 16.4592 17.2029 16.831 16.831" fill={fill} />
    </svg>
);


export { Suit, Toga, Sun, Moon, Search };